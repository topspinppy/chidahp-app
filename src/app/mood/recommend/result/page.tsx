"use client";

import { useEffect, useState } from "react";
import { useRouter } from "next/navigation";
import { motion } from "framer-motion";
import { moods } from "./moods";
import MoodLoading from "../../components/MoodLoading";

export default function RecommendResult() {
  const router = useRouter();
  const [isLoading, setIsLoading] = useState(true);
  const [topMood, setTopMood] = useState<string | null>(null);
  const [intent, setIntent] = useState<string | null>(null);
  const [, setSubfeelings] = useState<string[]>([]);
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const [books, setBooks] = useState<any[]>([]);
  const [caption, setCaption] = useState<string>("");
  const [insightLines, setInsightLines] = useState<string[]>([]);
  const [bgGradient, setBgGradient] = useState("from-gray-50 via-slate-100 to-indigo-100");

  const intentCaptionMap: Record<string, string> = {
    "‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏°‡∏µ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡∏Ç‡∏∂‡πâ‡∏ô": "‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ",
    "‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô": "‡∏û‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏Å‡∏•‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏µ‡∏Å‡∏ô‡∏¥‡∏î",
    "‡∏≠‡∏¢‡∏≤‡∏Å‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏≤‡∏∞‡πÄ‡∏ö‡∏≤ ‡πÜ": "‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡πâ‡∏°‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏´‡∏ß",
    "‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÅ‡∏õ‡∏•‡∏Å": "‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß",
    "‡∏≠‡∏¢‡∏≤‡∏Å‡∏•‡∏∏‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà": "‡πÉ‡∏´‡πâ‡πÉ‡∏à‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á",
    "‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à": "‡πÉ‡∏´‡πâ‡πÉ‡∏à‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏Ç‡∏¢‡∏±‡∏ö",
    "‡∏≠‡∏¢‡∏≤‡∏Å‡∏û‡∏±‡∏Å‡πÉ‡∏à‡πÄ‡∏â‡∏¢ ‡πÜ ‡∏™‡∏±‡∏Å‡∏ô‡∏¥‡∏î": "‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏û‡∏±‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ú‡∏¥‡∏î",
  };

  const subfeelingMap: Record<string, string> = {
    "‡∏Å‡∏•‡∏±‡∏ß‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏±‡∏á‡∏≠‡∏µ‡∏Å": "‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏•‡∏±‡∏ß‡∏à‡∏∞‡πÄ‡∏à‡πá‡∏ö‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏ã‡πâ‡∏≥‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á",
    "‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢": "‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏≤‡∏à‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡∏¥‡∏î‡∏ñ‡∏∂‡∏á‡∏ö‡∏≤‡∏á‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß",
    "‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÇ‡∏î‡∏î‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß": "‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏á‡∏µ‡∏¢‡∏ö‡∏°‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô",
    "‡∏•‡∏±‡∏á‡πÄ‡∏• ‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ": "‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏≤‡∏á‡πÑ‡∏´‡∏ô‡∏î‡∏µ",
    "‡∏ñ‡∏π‡∏Å‡πÄ‡∏≠‡∏≤‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö": "‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡πÇ‡∏•‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏¢‡∏∏‡∏ï‡∏¥‡∏ò‡∏£‡∏£‡∏°‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì",
    "‡∏≠‡∏¢‡∏≤‡∏Å‡∏´‡∏ô‡∏µ‡∏à‡∏≤‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏£‡∏≠‡∏ö‡∏ï‡∏±‡∏ß": "‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏á‡∏µ‡∏¢‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ü‡∏±‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á",
    "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏∞‡πÑ‡∏£": "‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡∏´‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏ß‡πà‡∏≤‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏∞‡πÑ‡∏£",
    "‡∏´‡∏°‡∏î‡πÅ‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°": "‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°‡∏°‡∏±‡∏ô‡∏´‡∏°‡∏î‡πÅ‡∏£‡∏á",
    "‡πÇ‡∏´‡∏¢‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á": "‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏≤‡∏Å‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏™‡∏±‡∏Å‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à",
    "‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡πâ‡∏°": "‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏≤‡∏Å‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÉ‡∏´‡πâ‡∏™‡∏∏‡∏î!",
    "‡πÅ‡∏ö‡∏Å‡πÄ‡∏¢‡∏≠‡∏∞‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ": "‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏≤‡∏à‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ö‡∏Å‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ",
    "‡∏Ç‡∏≤‡∏î‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢": "‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏´‡πá‡∏ô‡∏†‡∏≤‡∏û‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á",
    "‡πÑ‡∏°‡πà‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á": "‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏≤‡∏à‡∏™‡∏á‡∏™‡∏±‡∏¢‡πÉ‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà",
  };

  const moodGradientMap: Record<string, string> = {
    "‡πÄ‡∏®‡∏£‡πâ‡∏≤": "from-slate-100 via-blue-50 to-indigo-100",
    "‡∏´‡∏°‡∏î‡πÑ‡∏ü": "from-zinc-100 via-neutral-50 to-rose-100",
    "‡∏™‡∏±‡∏ö‡∏™‡∏ô": "from-purple-100 via-indigo-50 to-blue-100",
    "‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á": "from-emerald-100 via-green-50 to-teal-100",
    "‡πÇ‡∏Å‡∏£‡∏ò‡πÇ‡∏•‡∏Å": "from-orange-100 via-yellow-50 to-red-100",
    "‡πÄ‡∏´‡∏á‡∏≤": "from-slate-50 via-gray-100 to-blue-50",
    "‡∏Æ‡∏µ‡∏•‡πÉ‡∏à": "from-pink-100 via-rose-50 to-red-100",
    "‡πÄ‡∏ü‡∏µ‡∏¢‡∏ã": "from-yellow-100 via-orange-50 to-red-100",
    "‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à": "from-indigo-100 via-violet-50 to-blue-100",
    "‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢": "from-gray-200 via-neutral-50 to-white",
  };

  useEffect(() => {
    const storedIntent = sessionStorage.getItem("userIntent");
    const stats = JSON.parse(sessionStorage.getItem("moodStats") || "{}");
    const subs = JSON.parse(sessionStorage.getItem("topSubfeelings") || "[]");

    if (!storedIntent || Object.keys(stats).length === 0) {
      router.push("/mood/pre-question");
      return;
    }

    const sorted = Object.entries(stats).sort((a, b) => b[1] - a[1]);
    const topMood = sorted[0]?.[0];

    setTopMood(topMood);
    setIntent(storedIntent);
    setSubfeelings(subs);
    setCaption(intentCaptionMap[storedIntent] || "‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏à‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£");

    const mapped = subs.map((s: string) => subfeelingMap[s]).filter(Boolean);
    setInsightLines(mapped);

    // üé® ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ï‡∏≤‡∏° topMood
    setBgGradient(moodGradientMap[topMood] || "from-gray-50 via-slate-100 to-indigo-100");

    const moodObj = moods.find((m) => m.mood === topMood);
    if (!moodObj) return;

    const safeMatch = (arr?: string[]) => Array.isArray(arr) ? arr : [];

    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const matchedBooks = moodObj.books.filter((book: any) =>
      safeMatch(book.matchSubfeelings).some((sf: string) =>
        subs.some((userSf: string) => sf.toLowerCase() === userSf.toLowerCase())
      )
    );

    setBooks(matchedBooks.length > 0 ? matchedBooks : moodObj.books);
    setTimeout(() => setIsLoading(false), 1800);
  // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [router]);

  if (isLoading) return <MoodLoading />;

  return (
    <motion.div
      className={`min-h-screen bg-gradient-to-b ${bgGradient} py-12 px-4 font-sans`}
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 1.2 }}
      style={{ fontFamily: "'Noto Sans Thai', sans-serif" }}
    >
      <div className="max-w-6xl mx-auto">
        {/* HEADER */}
        <motion.div
          className="text-center mb-10"
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
        >
          <h1 className="text-4xl sm:text-5xl font-bold text-gray-800 mb-3 tracking-tight leading-snug">
          ‡πÄ‡∏•‡πà‡∏°‡∏ô‡∏µ‡πâ‡πÅ‡∏´‡∏•‡∏∞... ‡πÉ‡∏à‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏¢‡∏≤‡∏Å‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏ï‡∏±‡∏ß
          </h1>
          {topMood && (
            <p className="text-lg text-gray-600 italic mt-2">
              ‡∏à‡∏≤‡∏Å‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡πÉ‡∏à‡∏Ñ‡∏∏‡∏ì <strong className="text-indigo-700">{`"${topMood}"`}</strong> <br />
              ‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏≠ <strong className="text-indigo-700">{`"${intent}"`}</strong>
            </p>
          )}
          <p className="mt-4 text-xl text-gray-700 font-medium">{caption}</p>

          {insightLines.length > 0 && (
            <div className="mt-6 text-sm text-gray-600 leading-relaxed">
              {insightLines.map((line, idx) => (
                <p key={idx} className="mb-1">‚Ä¢ {line}</p>
              ))}
              <p className="mt-3 italic text-indigo-600 font-medium">
                ‡πÅ‡∏•‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ô‡∏µ‡πâ... ‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ
              </p>
            </div>
          )}
        </motion.div>

        {/* BOOKS */}
        <div className="flex flex-wrap justify-center gap-8">
          {books.map((book, idx) => (
            <motion.div
              key={idx}
              className="bg-white border border-indigo-100 rounded-xl shadow-md overflow-hidden transition hover:shadow-lg w-full max-w-xs"
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5, delay: idx * 0.2 }}
            >
              <img
                src={book.cover}
                alt={book.title}
                className="w-full h-[300px] object-contain bg-white"
              />
              <div className="p-6">
                <h2 className="text-xl font-semibold text-indigo-800 mb-1">{book.title}</h2>
                <p className="text-sm text-gray-500 mb-2">‡πÇ‡∏î‡∏¢ {book.author}</p>
                <p className="text-gray-700 text-sm mb-4">{book.description}</p>
                <a
                  href={book.link}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="inline-block text-sm text-indigo-600 font-medium hover:underline"
                >
                  ‡πÑ‡∏õ‡∏î‡∏π‡πÄ‡∏•‡πà‡∏°‡∏ô‡∏µ‡πâ ‚Üí
                </a>
              </div>
            </motion.div>
          ))}
        </div>

        {/* EMPTY STATE */}
        {books.length === 0 && (
          <motion.div
            className="text-center mt-20 text-gray-500 italic"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ duration: 1 }}
          >
            ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏•‡πà‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡πÄ‡∏õ‡πä‡∏∞ ‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á...‡∏Ñ‡∏∏‡∏ì‡∏Å‡πá‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å‡πÅ‡∏•‡πâ‡∏ß üíô
          </motion.div>
        )}

        {/* CLOSING */}
        <motion.div
          className="text-center mt-20 text-lg text-gray-700 font-semibold"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 1.2 }}
        >
          ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏•‡πà‡∏°‡∏ô‡∏∂‡∏á‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ <br />
          ‡πÅ‡∏ï‡πà‡πÉ‡∏à‡∏ó‡∏µ‡πà‡∏¢‡∏≠‡∏°‡∏ü‡∏±‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á... ‡∏ô‡∏±‡πà‡∏ô‡πÅ‡∏´‡∏•‡∏∞‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á üí≠
        </motion.div>

        {/* RETRY */}
        <div className="mt-10 text-center">
          <button
            onClick={() => router.push("/mood")}
            className="px-6 py-2 bg-indigo-600 text-white rounded-full hover:bg-indigo-700 transition"
          >
            ‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡∏±‡∏ö‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡πÉ‡∏´‡∏°‡πà ‚Üí
          </button>
          <p className="text-sm text-gray-500 mt-2 italic">
            ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÉ‡∏à‡πÄ‡∏£‡∏≤‡∏Å‡πá‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô
          </p>
        </div>

        {/* FOOTER */}
        <motion.div
          className="mt-16 text-center text-xs text-gray-400"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 1.4, duration: 1 }}
        >
          <p className="italic">powered by ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ä‡∏π‡πÇ‡∏•‡πà | Cardtel System</p>
          <p>¬© {new Date().getFullYear()} ‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏µ‡πâ‡∏î‡∏≤‡∏ö</p>
        </motion.div>
      </div>
    </motion.div>
  );
}

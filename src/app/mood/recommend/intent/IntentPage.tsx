"use client";

import { useEffect, useState } from "react";
import { useRouter } from "next/navigation";
import { motion, AnimatePresence } from "framer-motion";

const userIntents = [
  { text: "‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏°‡∏µ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡∏Ç‡∏∂‡πâ‡∏ô", emoji: "üíô" },
  { text: "‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô", emoji: "üß†" },
  { text: "‡∏≠‡∏¢‡∏≤‡∏Å‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏≤‡∏∞‡πÄ‡∏ö‡∏≤ ‡πÜ", emoji: "üòÑ" },
  { text: "‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÅ‡∏õ‡∏•‡∏Å", emoji: "ü´Ç" },
  { text: "‡∏≠‡∏¢‡∏≤‡∏Å‡∏•‡∏∏‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà", emoji: "üå±" },
  { text: "‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à", emoji: "‚ö°" },
  { text: "‡∏≠‡∏¢‡∏≤‡∏Å‡∏û‡∏±‡∏Å‡πÉ‡∏à‡πÄ‡∏â‡∏¢ ‡πÜ ‡∏™‡∏±‡∏Å‡∏ô‡∏¥‡∏î", emoji: "üõãÔ∏è" },
];

const moodQuotes: Record<string, string> = {
  "‡πÄ‡∏®‡∏£‡πâ‡∏≤": "‡πÄ‡∏≠‡∏≤‡∏à‡∏£‡∏¥‡∏á ‡πÜ ‡∏Å‡πá‡πÄ‡∏®‡∏£‡πâ‡∏≤‡∏ô‡∏∞... ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏ï‡∏•‡∏Å‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏°‡∏±‡πâ‡∏¢‡∏•‡πà‡∏∞",
  "‡∏´‡∏°‡∏î‡πÑ‡∏ü": "‡πÑ‡∏ü‡∏°‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏î‡∏±‡∏ö... ‡∏°‡∏±‡∏ô‡πÅ‡∏Ñ‡πà‡∏û‡∏±‡∏Å‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏´‡∏•‡∏Ç‡∏µ‡πâ‡πÄ‡∏Å‡∏µ‡∏¢‡∏à",
  "‡∏™‡∏±‡∏ö‡∏™‡∏ô": "‡∏á‡∏á‡∏Å‡πá‡πÄ‡∏î‡∏¥‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏ô‡∏∞ ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ú‡∏¥‡∏î‡∏Å‡∏é‡πÇ‡∏•‡∏Å‡∏ã‡∏∞‡∏´‡∏ô‡πà‡∏≠‡∏¢",
  "‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á": "‡∏ö‡∏≤‡∏á‡∏ó‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏Å‡πá‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏¢‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏≠‡∏ö‡∏ä‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏ô‡∏∞",
  "‡πÇ‡∏Å‡∏£‡∏ò‡πÇ‡∏•‡∏Å": "‡πÇ‡∏•‡∏Å‡∏°‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÅ‡∏ü‡∏£‡πå ‡πÅ‡∏ï‡πà‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ü‡∏£‡πå‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏Å‡πá‡∏¢‡∏±‡∏á‡∏î‡∏µ",
  "‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà": "‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡πÑ‡∏´‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏à‡∏•‡πâ‡∏ß‡∏ô‡∏û‡∏≠?",
  "‡πÄ‡∏´‡∏á‡∏≤": "‡∏ö‡∏≤‡∏á‡∏Ñ‡∏ô‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á ‡πÜ ‡πÅ‡∏ï‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô playlist ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏∑‡∏ô",
  "‡πÄ‡∏ü‡∏µ‡∏¢‡∏ã": "‡∏Ñ‡∏ô‡πÄ‡∏ü‡∏µ‡∏¢‡∏ã‡πÑ‡∏°‡πà‡πÄ‡∏î‡∏¥‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤... ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏∞‡∏ó‡∏∑‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡πÉ‡∏´‡πâ‡∏™‡∏±‡πà‡∏ô‡∏î‡πâ‡∏ß‡∏¢",
  "‡∏Å‡∏±‡∏á‡∏ß‡∏•": "‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏≤‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Å‡πá‡πÑ‡∏î‡πâ ‡πÅ‡∏Ñ‡πà‡∏¢‡∏±‡∏á‡∏ñ‡∏≤‡∏°‡∏≠‡∏¢‡∏π‡πà‡∏Å‡πá‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏Å‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πâ‡∏≤‡∏ö",
  "‡∏≠‡∏¢‡∏≤‡∏Å‡∏Å‡πâ‡∏≤‡∏ß‡∏Ç‡πâ‡∏≤‡∏°": "‡∏ù‡∏±‡πà‡∏á‡∏ï‡∏£‡∏á‡∏Ç‡πâ‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏±‡∏ß... ‡∏ö‡∏≤‡∏á‡∏ó‡∏µ‡∏°‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ó‡πà‡∏Å‡∏ß‡πà‡∏≤‡∏ô‡∏µ‡πâ",
  "‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à": "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô...‡πÅ‡∏ï‡πà‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏±‡πà‡∏ô ‡πÉ‡∏Ñ‡∏£‡∏Å‡πá‡∏´‡∏¢‡∏∏‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ",
  "‡∏≠‡∏¢‡∏≤‡∏Å‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á": "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡πÑ‡∏´‡∏ô...‡πÅ‡∏Ñ‡πà‡∏´‡∏•‡∏ö‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô hoodie ‡πÄ‡∏â‡∏¢ ‡πÜ",
  "‡∏Æ‡∏µ‡∏•‡πÉ‡∏à": "‡πÉ‡∏à‡∏°‡∏±‡∏ô‡∏ä‡πâ‡∏≥‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£...‡πÅ‡∏ï‡πà‡∏Ç‡∏≠‡∏≠‡∏¢‡πà‡∏≤‡∏ä‡πâ‡∏≥‡∏ã‡πâ‡∏≥‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°‡∏Å‡πá‡∏û‡∏≠",
  "‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î": "‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏™‡πÅ‡∏Å‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏ã‡πÄ‡∏ß‡πà‡∏ô‡∏ó‡∏±‡∏ô = ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏≤‡∏¢",
  "‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢": "‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏≠‡πà‡∏≤‡∏ô‡∏°‡∏≤‡∏ñ‡∏∂‡∏á‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ...‡∏Å‡πá‡πÄ‡∏Å‡πà‡∏á‡∏™‡∏±‡∏™‡∏•‡∏∞",
};

const moodToSuggestedIntent: Record<string, string> = {
  "‡πÄ‡∏®‡∏£‡πâ‡∏≤": "‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÅ‡∏õ‡∏•‡∏Å",
  "‡∏´‡∏°‡∏î‡πÑ‡∏ü": "‡∏≠‡∏¢‡∏≤‡∏Å‡∏û‡∏±‡∏Å‡πÉ‡∏à‡πÄ‡∏â‡∏¢ ‡πÜ ‡∏™‡∏±‡∏Å‡∏ô‡∏¥‡∏î",
  "‡πÄ‡∏ü‡∏µ‡∏¢‡∏ã": "‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à",
  "‡∏Å‡∏±‡∏á‡∏ß‡∏•": "‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô",
  "‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢": "‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏°‡∏µ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡∏Ç‡∏∂‡πâ‡∏ô",
  "‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á": "‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô",
  "‡∏Æ‡∏µ‡∏•‡πÉ‡∏à": "‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏°‡∏µ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡∏Ç‡∏∂‡πâ‡∏ô",
  "‡∏≠‡∏¢‡∏≤‡∏Å‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á": "‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏°‡∏µ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡∏Ç‡∏∂‡πâ‡∏ô",
  "‡πÄ‡∏´‡∏á‡∏≤": "‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÅ‡∏õ‡∏•‡∏Å",
  "‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà": "‡∏≠‡∏¢‡∏≤‡∏Å‡∏•‡∏∏‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà",
};

export default function IntentPage() {
  const router = useRouter();
  const [topMoods, setTopMoods] = useState<string[]>([]);
  const [selectedMood, setSelectedMood] = useState<string | null>(null);
  const [intent, setIntent] = useState<string | null>(null);

  useEffect(() => {
    const storedMoods = sessionStorage.getItem("topMoods");
    if (storedMoods) {
      const parsed = JSON.parse(storedMoods);
      if (Array.isArray(parsed)) {
        setTopMoods(parsed);
        setSelectedMood(parsed[0]);
      }
    } else {
      router.push("/mood/pre-question");
    }
  }, [router]);

  const handleConfirm = () => {
    if (!selectedMood || !intent) return;
    sessionStorage.setItem("finalMood", selectedMood);
    sessionStorage.setItem("userIntent", intent);
    router.push("/mood/recommend/result");
  };

  const suggested = selectedMood ? moodToSuggestedIntent[selectedMood] : null;

  return (
    <motion.div
      className="relative min-h-screen overflow-hidden flex items-center justify-center px-6 py-12 font-sans"
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 1.2 }}
    >
      <div className="absolute inset-0 z-0">
        <div className="absolute w-[200%] h-[200%] bg-gradient-to-br from-indigo-100 via-sky-100 to-white animate-[spin_60s_linear_infinite] opacity-20 rounded-full" />
      </div>

      <motion.div
        className="relative z-10 max-w-3xl w-full text-center"
        initial={{ opacity: 0, y: 24 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.8 }}
      >
        <div className="text-5xl mb-2">üß≠</div>
        <h1 className="text-3xl font-bold text-gray-800 mb-1">‡∏ä‡∏µ‡πâ‡∏î‡∏≤‡∏ö‡∏Ç‡∏≠‡∏•‡∏≠‡∏á‡πÄ‡∏î‡∏≤‡πÉ‡∏à‡∏Ñ‡∏∏‡∏ì‡∏î‡∏π...</h1>
        <p className="text-gray-600 mb-6 text-sm">
          ‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏µ‡πâ... ‡∏ä‡∏µ‡πâ‡∏î‡∏≤‡∏ö‡∏ß‡πà‡∏≤‡πÉ‡∏à‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏ñ‡∏ß‡∏ô‡∏µ‡πâ‡πÅ‡∏´‡∏•‡∏∞
        </p>

        {/* Moods */}
        <motion.div
          className="flex flex-wrap justify-center gap-3 mb-8"
          initial="hidden"
          animate="visible"
          variants={{ visible: { transition: { staggerChildren: 0.07 } } }}
        >
          {topMoods.map((mood) => (
            <motion.button
              key={mood}
              onClick={() => {
                setSelectedMood(mood);
                setIntent(null); // reset intent
              }}
              variants={{
                hidden: { opacity: 0, y: 10 },
                visible: { opacity: 1, y: 0 },
              }}
              whileTap={{ scale: 0.95 }}
              whileHover={{ scale: 1.05 }}
              className={`px-4 py-2 rounded-full border text-sm font-medium transition-all shadow-sm ${
                selectedMood === mood
                  ? "bg-indigo-600 text-white border-indigo-600"
                  : "bg-white text-gray-700 border-gray-300 hover:bg-gray-50"
              }`}
            >
              {mood}
            </motion.button>
          ))}
        </motion.div>

        {/* Quote */}
        <AnimatePresence>
          {selectedMood && (
            <motion.div
              key="quote"
              className="max-w-md mx-auto mb-4 text-indigo-700 text-sm italic"
              initial={{ opacity: 0, y: 8 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -8 }}
              transition={{ duration: 0.4 }}
            >
              ‚Äú{moodQuotes[selectedMood]}‚Äù
            </motion.div>
          )}
        </AnimatePresence>

        {selectedMood && (
          <p className="mb-4 text-gray-700 font-medium">
            ‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ... ‡πÉ‡∏à‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡∏≠‡∏∞‡πÑ‡∏£‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏à‡∏≤‡∏Å‡πÄ‡∏•‡πà‡∏°‡∏î‡∏µ ‡πÜ ‡∏™‡∏±‡∏Å‡πÄ‡∏•‡πà‡∏°‡∏•‡πà‡∏∞?
          </p>
        )}

        {/* Intent grid */}
        <motion.div
          className="grid grid-cols-1 sm:grid-cols-2 gap-4 max-w-2xl mx-auto mb-8"
          initial="hidden"
          animate="visible"
          variants={{ visible: { transition: { staggerChildren: 0.05 } } }}
        >
          {userIntents.map(({ text, emoji }) => {
            const isSuggested = text === suggested;

            return (
              <motion.div
                key={text}
                variants={{
                  hidden: { opacity: 0, y: 10 },
                  visible: { opacity: 1, y: 0 },
                }}
                whileHover={{ scale: 1.03 }}
                whileTap={{ scale: 0.97 }}
                onClick={() => setIntent(text)}
                className={`cursor-pointer p-4 rounded-xl border text-sm text-center transition-all select-none ${
                  intent === text
                    ? "bg-indigo-600 text-white border-indigo-600 ring-2 ring-indigo-300"
                    : isSuggested
                    ? "bg-white text-gray-700 border-yellow-400 ring-2 ring-yellow-200"
                    : "bg-white text-gray-700 border-gray-200 hover:bg-gray-50"
                }`}
              >
                <div className="text-2xl mb-1">{emoji}</div>
                {text}
              </motion.div>
            );
          })}
        </motion.div>

        {/* Confirm */}
        <motion.button
          onClick={handleConfirm}
          disabled={!intent}
          whileHover={{ scale: intent ? 1.05 : 1 }}
          whileTap={{ scale: 0.95 }}
          className="bg-indigo-600 text-white px-6 py-3 rounded-full shadow-lg hover:bg-indigo-700 transition disabled:opacity-40 disabled:cursor-not-allowed"
        >
          ‡πÑ‡∏õ‡∏î‡∏π‡πÄ‡∏•‡πà‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏à‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏≤‡∏Å‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏•‡∏¢ ‚Üí
        </motion.button>

        {intent && (
          <p className="text-xs text-gray-500 mt-4 italic">
            üí≠ ‡∏≠‡∏¢‡πà‡∏≤‡∏°‡∏±‡∏ß‡∏•‡∏±‡∏á‡πÄ‡∏• ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡πÄ‡∏•‡πà‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πà‡∏´‡∏•‡∏∏‡∏î‡∏°‡∏∑‡∏≠‡∏ô‡∏∞‡∏Ñ‡πâ‡∏≤‡∏ö
          </p>
        )}
      </motion.div>
    </motion.div>
  );
}

/* eslint-disable @typescript-eslint/no-explicit-any */
"use client";

import { useEffect, useState, useMemo } from "react";
import { useRouter } from "next/navigation";
import { motion } from "framer-motion";

const moodQuotes: Record<string, string> = {
  "‡πÄ‡∏®‡∏£‡πâ‡∏≤": "‡∏°‡∏µ‡∏Ñ‡∏ô‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞ üñ§",
  "‡∏≠‡∏¢‡∏≤‡∏Å‡∏ö‡πâ‡∏≤": "‡∏ö‡∏≤‡∏á‡∏ó‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡πâ‡∏≤‡∏Å‡πá‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏≠‡∏î‡∏à‡∏≤‡∏Å‡πÇ‡∏•‡∏Å‡∏ó‡∏µ‡πà‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏±‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ",
  "‡∏≠‡∏¥‡∏ô‡πÄ‡∏•‡∏¥‡∏ü": "‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏Ñ‡πà‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à... ‡πÅ‡∏ï‡πà‡∏°‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏ß‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï",
  "‡∏™‡∏±‡∏ö‡∏™‡∏ô": "‡∏ö‡∏≤‡∏á‡∏ó‡∏µ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Å‡πá‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏±‡∏ß ‡πÅ‡∏ï‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏•‡πà‡∏°",
  "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à": "‡πÄ‡∏ò‡∏≠‡∏≠‡∏≤‡∏à‡∏•‡πâ‡∏≤... ‡πÅ‡∏ï‡πà‡πÄ‡∏ò‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡πâ‡∏°",
  "‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á": "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÑ‡∏´‡∏ô‡πÅ‡∏°‡πà‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏≤‡πÄ‡∏≠‡∏á",
  "‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏õ‡πÑ‡∏Å‡∏•‡πÜ": "‡∏ö‡∏≤‡∏á‡∏ó‡∏µ‡∏Å‡πá‡πÅ‡∏Ñ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏´‡∏ô‡∏µ ‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏õ‡πÄ‡∏à‡∏≠‡∏≠‡∏∞‡πÑ‡∏£‡∏î‡∏µ‡πÜ ‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤ üåç",
  "‡πÇ‡∏Å‡∏£‡∏ò‡πÇ‡∏•‡∏Å": "‡πÇ‡∏•‡∏Å‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡πÅ‡∏ü‡∏£‡πå... ‡πÅ‡∏ï‡πà‡∏°‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏¥‡∏î‡∏õ‡∏≤‡∏Å‡πÄ‡∏ò‡∏≠‡πÑ‡∏î‡πâ",
  "‡∏´‡∏°‡∏î‡πÑ‡∏ü": "‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏∏‡∏Å‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡πÅ‡∏Ñ‡πà‡∏ô‡∏±‡πà‡∏á‡∏û‡∏±‡∏Å‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡πá‡πÑ‡∏î‡πâ",
  "‡∏Å‡∏•‡∏±‡∏ß‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß": "‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏ä‡∏ô‡∏∞‡∏ï‡∏•‡∏≠‡∏î... ‡πÅ‡∏ï‡πà‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà",
  "‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Å‡∏±‡∏ö‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï": "‡∏ñ‡πâ‡∏≤‡πÄ‡∏ò‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà '‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡πá‡∏ô' ‡∏Å‡πá‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡πÇ‡∏•‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",
  "‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡πÇ‡∏•‡∏Å‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô": "‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏µ‡∏Å‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏≠‡∏≤‡∏à‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏à‡∏≠"
};

export default function MoodDisplay({ moods }: { moods: any[] }) {
  const router = useRouter();
  const [background, setBackground] = useState(
    "bg-gradient-to-r from-yellow-400 via-orange-400 to-red-400"
  );
  const [showQuote, setShowQuote] = useState(false);
  const [selectedMood, setSelectedMood] = useState<any>(null);
  const [subfeelings, setSubfeelings] = useState<string[]>([]);

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î subfeelings ‡∏à‡∏≤‡∏Å sessionStorage
  useEffect(() => {
    const stored = sessionStorage.getItem("subfeelings");
    if (stored) {
      try {
        const parsed = JSON.parse(stored);
        if (Array.isArray(parsed)) {
          setSubfeelings(parsed);
        } else {
          throw new Error("Invalid format");
        }
      } catch {
        router.push("/mood/pre-question");
      }
    } else {
      router.push("/mood/pre-question");
    }
  }, [router]);

  // ‚úÖ ‡∏à‡∏±‡∏î‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö moods ‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£ match ‡∏Å‡∏±‡∏ö subfeelings
  const rankedMoods = useMemo(() => {
    return [...moods].sort((a, b) => {
      const score = (mood: any) =>
        mood.books.reduce((acc: number, book: any) => {
          const matches = book.matchSubfeelings?.filter((sub: string) =>
            subfeelings.some((sf) => sub.toLowerCase() === sf.toLowerCase())
          )?.length || 0;
          return acc + matches;
        }, 0);
      return score(b) - score(a);
    });
  }, [moods, subfeelings]);

  // ‚úÖ ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î mood ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏û‡πà‡∏ß‡∏á query
  const goToMoodPage = (mood: any) => {
    const slug = encodeURIComponent(mood.mood);
    router.push(`/mood/${slug}`);
  };

  

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 1.2, ease: "easeOut" }}
      className={`min-h-screen flex items-center justify-center transition-all duration-[1500ms] ease-in-out bg-animate ${background}`}
    >
      <div className="pt-16 px-6 relative w-full">

        {/* QUOTE OVERLAY */}
        {showQuote && selectedMood && moodQuotes[selectedMood.mood] && (
          <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 
            text-white text-center text-xl md:text-2xl font-semibold bg-black bg-opacity-60 
            px-6 py-4 rounded-xl animate-fadeIn z-50 max-w-md shadow-lg">
            {moodQuotes[selectedMood.mood]}
          </div>
        )}

        {/* HEADER */}
        <header className="flex flex-col items-center justify-center mb-10 text-center">
          <h1 className="text-4xl md:text-5xl font-bold text-white drop-shadow-lg font-primary">
            ‡∏ä‡∏µ‡πâ‡∏î‡∏≤‡∏ö‡∏•‡∏≠‡∏á‡πÄ‡∏î‡∏≤‡πÉ‡∏à‡∏Ñ‡∏∏‡∏ì‡∏î‡∏π...
          </h1>
          <p className="mt-2 text-white text-opacity-80 text-base md:text-lg">
            ‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ ‡πÄ‡∏£‡∏≤‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏ô‡πà‡∏≤‡∏à‡∏∞‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏ô‡∏∞ üß†üí¨
          </p>
          <p className="mt-2 text-white text-opacity-70 text-sm italic">
            ‡∏ñ‡πâ‡∏≤‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÉ‡∏ä‡πà...‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡πÄ‡∏•‡πà‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÑ‡∏ß‡πâ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏¢
          </p>
        </header>

        {/* MOOD GRID */}
        <main className="max-w-4xl mx-auto grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4 text-white">
          {rankedMoods.slice(0, 4).map((mood, index) => (
            <div
              key={index}
              className="bg-white bg-opacity-10 rounded-xl p-4 flex flex-col items-center justify-center transition-all cursor-pointer transform hover:scale-105"
              onMouseEnter={() =>
                setBackground(`${mood.gradient} animate-gradient`)
              }
              onMouseLeave={() =>
                setBackground(
                  "bg-gradient-to-r from-yellow-400 via-orange-400 to-red-400"
                )
              }
              onClick={() => {
                setSelectedMood(mood);
                setShowQuote(true);
                setTimeout(() => {
                  setShowQuote(false);
                  goToMoodPage(mood);
                }, 2500);
              }}
            >
              <div className="text-4xl">{mood.emoji}</div>
              <div className="mt-2 font-semibold text-red-950">
                {mood.mood}
              </div>
            </div>
          ))}
        </main>

        {/* FOOTER */}
        <footer className="mt-24 text-center text-white text-xs sm:text-sm opacity-60 px-4 font-primary">
          <div className="py-6 border-t border-white border-opacity-20">
            <p className="italic">
              ‚Äú‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏¢‡∏±‡∏á‡πÑ‡∏á ‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏≤‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡πÄ‡∏•‡πà‡∏°‡∏î‡∏µ‡πÜ ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‚Äù
            </p>
            <p className="mt-2">
              Powered by{" "}
              <a
                href="https://www.chidahp.com"
                target="_blank"
                rel="noopener noreferrer"
                className="underline hover:text-yellow-200"
              >
                ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ä‡∏π‡πÇ‡∏•‡πà
              </a>{" "}
              | ¬© {new Date().getFullYear()} All rights reserved.
            </p>
            <p className="mt-4 italic text-xs text-white text-opacity-70">
              #CardtelSystem #‡∏ä‡∏µ‡πâ‡∏î‡∏≤‡∏ö #‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏•‡πà‡∏°‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡πÉ‡∏à
            </p>
          </div>
        </footer>
      </div>
    </motion.div>
  );
}
